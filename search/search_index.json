{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome dogs-as-a-service.io is a RESTful API to serve dog photos over the internet. Browse the docs for more information about the current state of the API.","title":"Home"},{"location":"index.html#welcome","text":"dogs-as-a-service.io is a RESTful API to serve dog photos over the internet. Browse the docs for more information about the current state of the API.","title":"Welcome"},{"location":"about.html","text":"About dogs-as-a-service.io is created with one purpose: to serve dogs photos via REST API.","title":"About"},{"location":"about.html#about","text":"dogs-as-a-service.io is created with one purpose: to serve dogs photos via REST API.","title":"About"},{"location":"docs.html","text":"API Reference Introduction The dogs-as-a-service API is built on HTTP. The API is RESTful, it returns JSON and responds with standart HTTP codes. Authentication For some resources within this API, you must provide an authentication token in the request headers. Example: curl -iX GET -H 'Authorization: Bearer {API_TOKEN}' https://... User registration Currently, the API is in closed alpha. Once we ensure all functionality are working as intended the registration will be open thru separate API resource. After that, anyone with valid token will be able to upload their images to the platform. Response Format API will always responde with JSON-encoded objects - Content-Type: application/json . The response body may vary according to the request method and resource used, but for each successful request the API will return these common parts: { \"sucess\": true, \"result\": {} } Where result tag will contain your requested data. Date format Since JSON doesn't have a built-in data type for dates the dates will be returned as string in UTC ISO-8601 format. HTTP response codes Code Status Description 200 OK Request was successful 201 Created The object was created successfully within the API 202 Accepted The object was created successfully but require some processing before it becomes available 400 Bad Request The server cannot or will not process the request 401 Unauthorized The request has not been applied because it lacks valid authentication credentials for the target resource; Wrong authorization token 403 Forbidden The server understood the request but refuses to authorize it; Insufficient permissions 404 Not Found The origin server did not find a current representation for the target resource or is not willing to disclose that one exists 409 Conflict The request could not be completed due to a conflict with the current state of the target resource; Object already exists 422 Unprocessable Entity The request provided invalid parameters 423 Locked The object is locked 50x Something is wrong with the API Example of an error response: { \"message\": \"The request has not been applied because it lacks valid authentication credentials for the target resource\", \"status\": \"UNAUTHORIZED\", \"success\": false } API Endpoints Currently, there is one endpoint available: v1alpha .","title":"Docs"},{"location":"docs.html#api-reference","text":"","title":"API Reference"},{"location":"docs.html#introduction","text":"The dogs-as-a-service API is built on HTTP. The API is RESTful, it returns JSON and responds with standart HTTP codes.","title":"Introduction"},{"location":"docs.html#authentication","text":"For some resources within this API, you must provide an authentication token in the request headers. Example: curl -iX GET -H 'Authorization: Bearer {API_TOKEN}' https://...","title":"Authentication"},{"location":"docs.html#user-registration","text":"Currently, the API is in closed alpha. Once we ensure all functionality are working as intended the registration will be open thru separate API resource. After that, anyone with valid token will be able to upload their images to the platform.","title":"User registration"},{"location":"docs.html#response-format","text":"API will always responde with JSON-encoded objects - Content-Type: application/json . The response body may vary according to the request method and resource used, but for each successful request the API will return these common parts: { \"sucess\": true, \"result\": {} } Where result tag will contain your requested data.","title":"Response Format"},{"location":"docs.html#date-format","text":"Since JSON doesn't have a built-in data type for dates the dates will be returned as string in UTC ISO-8601 format.","title":"Date format"},{"location":"docs.html#http-response-codes","text":"Code Status Description 200 OK Request was successful 201 Created The object was created successfully within the API 202 Accepted The object was created successfully but require some processing before it becomes available 400 Bad Request The server cannot or will not process the request 401 Unauthorized The request has not been applied because it lacks valid authentication credentials for the target resource; Wrong authorization token 403 Forbidden The server understood the request but refuses to authorize it; Insufficient permissions 404 Not Found The origin server did not find a current representation for the target resource or is not willing to disclose that one exists 409 Conflict The request could not be completed due to a conflict with the current state of the target resource; Object already exists 422 Unprocessable Entity The request provided invalid parameters 423 Locked The object is locked 50x Something is wrong with the API Example of an error response: { \"message\": \"The request has not been applied because it lacks valid authentication credentials for the target resource\", \"status\": \"UNAUTHORIZED\", \"success\": false }","title":"HTTP response codes"},{"location":"docs.html#api-endpoints","text":"Currently, there is one endpoint available: v1alpha .","title":"API Endpoints"},{"location":"docs/v1alpha.html","text":"v1alpha Description: Endpoint : api.dogs-as-a-service.io/v1alpha . Schema : HTTPS . Location: / [GET] Get welcome message. Example request: curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha Example response: { \"message\": \"Welcome to the dogs-as-a-service public API\", \"success\": true, \"version\": \"v1alpha\" } Location: /image [GET] Get a single image object of a random dog. Example request: curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha/image Example response: { \"message\": \"OK\", \"result\": { \"image\": { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } }, \"success\": true } Location: /images [GET] Get list of images uploaded by the requestor. Authentication required Example request: curl -iX GET \\ -H 'Content-Type: application/json' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images Example response: { \"message\": \"OK\", \"result\": { \"images\": [ { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } ] }, \"success\": true } [POST] Upload new image to the dogs-as-a-service platform. Authentication required Limitations: Maximum image size is 2Mb (2 * 1024 * 1024). Supported image formats are: jpg , jpe , jpeg , png , gif , bmp . Image sha256 will be checked. If an image with the same sha already exists in the database you'll get 409 Conflict error code. The image will be placed in the queue for processing and analysis. It is required to ensure the image is: 1. safe, 2. contains a dog. Only after that, the image will become publicly available. Example request: curl -iX POST \\ -F 'file=cool-doggo.jpg' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images Example response: { \"message\": \"Accepted\", \"result\": { \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\" }, \"success\": true } Location: /images/{image uuid} [GET] Get detailed information about specified image. Example request: curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha/images/fc0b6b82-746a-428e-9202-5f157487a846 Example response: { \"message\": \"OK\", \"result\": { \"image\": { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } }, \"success\": true } [DELETE] Delete specified image. Authentication required Limitations: Only the person who uploaded the image can delete it. The image will become inaccessible as an object within the API. The image will become 'private' within the backend storage and the CDN scope. The image will be available from the CDN cache for some time. The image will be fully (storage backend, database) deleted after some time by the garbage collector. Example request: curl -iX DELETE \\ -H 'Content-Type: application/json' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images/fc0b6b82-746a-428e-9202-5f157487a846 Example response: { \"message\": \"Deleted\", \"result\": {}, \"success\": true }","title":"v1alpha"},{"location":"docs/v1alpha.html#v1alpha","text":"","title":"v1alpha"},{"location":"docs/v1alpha.html#description","text":"Endpoint : api.dogs-as-a-service.io/v1alpha . Schema : HTTPS .","title":"Description:"},{"location":"docs/v1alpha.html#location","text":"","title":"Location: /"},{"location":"docs/v1alpha.html#get","text":"Get welcome message.","title":"[GET]"},{"location":"docs/v1alpha.html#example-request","text":"curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha","title":"Example request:"},{"location":"docs/v1alpha.html#example-response","text":"{ \"message\": \"Welcome to the dogs-as-a-service public API\", \"success\": true, \"version\": \"v1alpha\" }","title":"Example response:"},{"location":"docs/v1alpha.html#location-image","text":"","title":"Location: /image"},{"location":"docs/v1alpha.html#get_1","text":"Get a single image object of a random dog.","title":"[GET]"},{"location":"docs/v1alpha.html#example-request_1","text":"curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha/image","title":"Example request:"},{"location":"docs/v1alpha.html#example-response_1","text":"{ \"message\": \"OK\", \"result\": { \"image\": { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } }, \"success\": true }","title":"Example response:"},{"location":"docs/v1alpha.html#location-images","text":"","title":"Location: /images"},{"location":"docs/v1alpha.html#get_2","text":"Get list of images uploaded by the requestor. Authentication required","title":"[GET]"},{"location":"docs/v1alpha.html#example-request_2","text":"curl -iX GET \\ -H 'Content-Type: application/json' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images","title":"Example request:"},{"location":"docs/v1alpha.html#example-response_2","text":"{ \"message\": \"OK\", \"result\": { \"images\": [ { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } ] }, \"success\": true }","title":"Example response:"},{"location":"docs/v1alpha.html#post","text":"Upload new image to the dogs-as-a-service platform. Authentication required","title":"[POST]"},{"location":"docs/v1alpha.html#limitations","text":"Maximum image size is 2Mb (2 * 1024 * 1024). Supported image formats are: jpg , jpe , jpeg , png , gif , bmp . Image sha256 will be checked. If an image with the same sha already exists in the database you'll get 409 Conflict error code. The image will be placed in the queue for processing and analysis. It is required to ensure the image is: 1. safe, 2. contains a dog. Only after that, the image will become publicly available.","title":"Limitations:"},{"location":"docs/v1alpha.html#example-request_3","text":"curl -iX POST \\ -F 'file=cool-doggo.jpg' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images","title":"Example request:"},{"location":"docs/v1alpha.html#example-response_3","text":"{ \"message\": \"Accepted\", \"result\": { \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\" }, \"success\": true }","title":"Example response:"},{"location":"docs/v1alpha.html#location-imagesimage-uuid","text":"","title":"Location: /images/{image uuid}"},{"location":"docs/v1alpha.html#get_3","text":"Get detailed information about specified image.","title":"[GET]"},{"location":"docs/v1alpha.html#example-request_4","text":"curl -iX GET \\ -H 'Content-Type: application/json' \\ https://api.dogs-as-a-service.io/v1alpha/images/fc0b6b82-746a-428e-9202-5f157487a846","title":"Example request:"},{"location":"docs/v1alpha.html#example-response_4","text":"{ \"message\": \"OK\", \"result\": { \"image\": { \"created_at\": \"2019-12-24T10:56:44\", \"locked\": false, \"selfLink\": \"https://api.dogs-as-a-service.io/v1alpha/images/1255ee1a-263c-11ea-b5b2-0242ac140002\", \"url\": \"https://cdn.dogs-as-a-service.io/1255ee1a-263c-11ea-b5b2-0242ac140002.jpeg\", \"uuid\": \"1255ee1a-263c-11ea-b5b2-0242ac140002\" } }, \"success\": true }","title":"Example response:"},{"location":"docs/v1alpha.html#delete","text":"Delete specified image. Authentication required","title":"[DELETE]"},{"location":"docs/v1alpha.html#limitations_1","text":"Only the person who uploaded the image can delete it. The image will become inaccessible as an object within the API. The image will become 'private' within the backend storage and the CDN scope. The image will be available from the CDN cache for some time. The image will be fully (storage backend, database) deleted after some time by the garbage collector.","title":"Limitations:"},{"location":"docs/v1alpha.html#example-request_5","text":"curl -iX DELETE \\ -H 'Content-Type: application/json' \\ -H 'Authorization: Bearer {API_TOKEN}' \\ https://api.dogs-as-a-service.io/v1alpha/images/fc0b6b82-746a-428e-9202-5f157487a846","title":"Example request:"},{"location":"docs/v1alpha.html#example-response_5","text":"{ \"message\": \"Deleted\", \"result\": {}, \"success\": true }","title":"Example response:"}]}